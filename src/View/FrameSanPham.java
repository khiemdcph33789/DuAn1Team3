/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.SanPham;
import Model.SanPhamChiTiet;
import Repository.SanPhamRepository;
import Repository.SanPhamChiTietRepository;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.common.BitMatrix;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author khiem
 */
public class FrameSanPham extends javax.swing.JFrame {

    private SanPhamRepository spRepo;
    private SanPhamChiTietRepository spctRepo;

    /**
     * Creates new form SanPham
     */
    public FrameSanPham() {
        initComponents();
        spRepo = new SanPhamRepository();
        spctRepo = new SanPhamChiTietRepository();
        LoadDatatoTableSP();
    }

    public void LoadDatatoTableSP() {
        DefaultTableModel dtm = (DefaultTableModel) this.tblSP.getModel();
        dtm.setRowCount(0);
        for (SanPham sp : spRepo.getList()) {
            Object[] rowData = {
                sp.getId(),
                sp.getName(),
                sp.getDanh_muc_id(),
                sp.getFabricType(),
                sp.getDesigns(),};
            dtm.addRow(rowData);
        }
    }

    public void LoadDataToTableSPCT(int SanPhamID) {
        DefaultTableModel dtm = (DefaultTableModel) this.tblSanPhamChiTiet.getModel();
        dtm.setRowCount(0);
        for (SanPhamChiTiet spct : spctRepo.getList()) {
            if (spct.getSan_pham_Id() == SanPhamID) {

                Object[] rowData = {
                    spct.getId(),
                    spct.getBarcode(),
                    spct.getColor(),
                    spct.getQuantity(),
                    spct.getSize(),
                    spct.getSellPrice(),
                    spct.getNote(),};
                dtm.addRow(rowData);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField5 = new javax.swing.JTextField();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtLoaiVai = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtKieuDang = new javax.swing.JTextField();
        btnThemSP = new javax.swing.JButton();
        btnUpdateProduct = new javax.swing.JButton();
        btnRemoveProduct = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblSP = new javax.swing.JTable();
        cbbDanhMuc = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblSanPhamChiTiet = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        txtGia = new javax.swing.JTextField();
        txtMauSac = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        btnInsertPDetail = new javax.swing.JButton();
        btnUpdatePDetail = new javax.swing.JButton();
        btnRemovePDetail = new javax.swing.JButton();
        btnClearPDetail = new javax.swing.JButton();
        cbbKichThuoc = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        jTextField5.setText("jTextField5");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setForeground(new java.awt.Color(153, 204, 255));

        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setText("Sản Phẩm");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/ProductICON.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Sản phẩm");

        jLabel1.setText("Tên sản phẩm");

        jLabel2.setText("Danh mục sản phẩm");

        jLabel3.setText("Loại vải");

        jLabel4.setText("Kiểu dáng");

        btnThemSP.setText("Thêm");
        btnThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPActionPerformed(evt);
            }
        });

        btnUpdateProduct.setText("Sửa");
        btnUpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProductActionPerformed(evt);
            }
        });

        btnRemoveProduct.setText("Xóa");
        btnRemoveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveProductActionPerformed(evt);
            }
        });

        btnClear.setText("Làm mới");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        tblSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên sản phẩm", "Danh mục sản phẩm", "Loại vải", "Kiểu dáng"
            }
        ));
        tblSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSPMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblSP);
        if (tblSP.getColumnModel().getColumnCount() > 0) {
            tblSP.getColumnModel().getColumn(0).setMinWidth(3);
            tblSP.getColumnModel().getColumn(0).setMaxWidth(25);
            tblSP.getColumnModel().getColumn(2).setMinWidth(150);
        }

        cbbDanhMuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chân váy", "Váy liền", "Váy thể thao", "Váy công sở", "Váy bầu" }));

        jLabel14.setText("Tìm kiếm sản phẩm");

        txtSearch.setText("Tên sản phẩm");
        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchFocusLost(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLoaiVai, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(btnThemSP)
                                .addGap(50, 50, 50)
                                .addComponent(btnUpdateProduct)))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRemoveProduct))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnClear)
                            .addComponent(txtKieuDang)
                            .addComponent(cbbDanhMuc, 0, 148, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtLoaiVai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtKieuDang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemSP)
                    .addComponent(btnUpdateProduct)
                    .addComponent(btnClear)
                    .addComponent(btnRemoveProduct))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tblSanPhamChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Barcode", "Màu sắc", "Số lượng", "Kích thước", "Giá", "Ghi chú"
            }
        ));
        tblSanPhamChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamChiTietMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblSanPhamChiTiet);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Sản phẩm chi tiết");

        jLabel6.setText("Màu sắc");

        jLabel7.setText("Số lượng");

        jLabel8.setText("Kích thước");

        jLabel9.setText("Giá");

        jLabel13.setText("Ghi chú");

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane1.setViewportView(txtGhiChu);

        btnInsertPDetail.setText("Thêm");
        btnInsertPDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertPDetailActionPerformed(evt);
            }
        });

        btnUpdatePDetail.setText("Sửa");
        btnUpdatePDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePDetailActionPerformed(evt);
            }
        });

        btnRemovePDetail.setText("Xóa");
        btnRemovePDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovePDetailActionPerformed(evt);
            }
        });

        btnClearPDetail.setText("Làm mới");
        btnClearPDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearPDetailActionPerformed(evt);
            }
        });

        cbbKichThuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S", "M", "L", "X", "XL" }));

        jButton1.setText("Tạo barcode");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(5, 5, 5))
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMauSac)
                    .addComponent(txtSoLuong)
                    .addComponent(cbbKichThuoc, 0, 164, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtGia)
                    .addComponent(jScrollPane1))
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnInsertPDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdatePDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnClearPDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRemovePDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInsertPDetail)
                            .addComponent(btnRemovePDetail))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel13)
                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(cbbKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel13Layout.createSequentialGroup()
                                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnUpdatePDetail)
                                        .addComponent(btnClearPDetail))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(46, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSPMouseClicked
        int row = this.tblSP.getSelectedRow();
        if (row == -1) {
            return;
        }
        LoadDataToTableSPCT((int) this.tblSP.getValueAt(row, 0));
        SanPham sp = spRepo.getList().get(row);
        this.txtTenSP.setText(sp.getName());
        this.cbbDanhMuc.setSelectedItem(sp.getDanh_muc_id());
        this.txtKieuDang.setText(sp.getDesigns());
        this.txtLoaiVai.setText(sp.getFabricType());
    }//GEN-LAST:event_tblSPMouseClicked

    private void tblSanPhamChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamChiTietMouseClicked
        int row = this.tblSanPhamChiTiet.getSelectedRow();
        if (row == -1) {
            return;
        }
        int spctID = (int) this.tblSanPhamChiTiet.getValueAt(row, 0);
        for (SanPhamChiTiet spct : spctRepo.getList()) {
            if (spctID == spct.getId()) {
                this.txtMauSac.setText(spct.getColor());
                this.txtSoLuong.setText(spct.getQuantity() + "");
                this.txtGia.setText(spct.getSellPrice() + "");
                this.txtGhiChu.setText(spct.getNote());
                this.cbbKichThuoc.setSelectedItem(spct.getSize().trim());
            }
        }

    }//GEN-LAST:event_tblSanPhamChiTietMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        this.txtTenSP.setText("");
        this.cbbDanhMuc.setSelectedIndex(0);
        this.txtKieuDang.setText("");
        this.txtLoaiVai.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnClearPDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearPDetailActionPerformed
        this.txtMauSac.setText("");
        this.txtSoLuong.setText("");
        this.txtGia.setText("");
        this.txtGhiChu.setText("");
        this.cbbKichThuoc.setSelectedIndex(0);
    }//GEN-LAST:event_btnClearPDetailActionPerformed

    private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed

        String Name = this.txtTenSP.getText();
        String FabricType = this.txtLoaiVai.getText();
        String Designs = this.txtKieuDang.getText();
        String danh_muc_SP = this.cbbDanhMuc.getSelectedItem().toString();
        for(SanPham sp : spRepo.getList()){
            if(sp.getName().equalsIgnoreCase(Name)){
                JOptionPane.showMessageDialog(this, "Sản phẩm " +Name + " đã tồn tại");
                 return ;
            }
        }
        if (ValidateSP()) {

            SanPham sp = new SanPham();
            sp.setName(Name);
            sp.setFabricType(FabricType);
            sp.setDesigns(Designs);
            sp.setDanh_muc_id(danh_muc_SP);
            spRepo.InsertProduct(sp);
            LoadDatatoTableSP();
            JOptionPane.showMessageDialog(this, "Thêm sản phẩm thành công");
        }


    }//GEN-LAST:event_btnThemSPActionPerformed

    private void btnUpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProductActionPerformed
        int row = this.tblSP.getSelectedRow();
        if (row == -1) {
            return;
        }
        int spID = (int) this.tblSP.getValueAt(row, 0);
        for (SanPham sp : spRepo.getList()) {
            if (spID == sp.getId()) {
                sp.setName(this.txtTenSP.getText());
                sp.setFabricType(this.txtLoaiVai.getText());
                sp.setDesigns(this.txtKieuDang.getText());
                sp.setDanh_muc_id(this.cbbDanhMuc.getSelectedItem().toString());
                spRepo.UpdateProduct(sp);
                LoadDatatoTableSP();
                JOptionPane.showMessageDialog(this, "Sửa sản phẩm thành công");
                break;
            }
        }
    }//GEN-LAST:event_btnUpdateProductActionPerformed

    private void btnRemoveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProductActionPerformed
        var Option = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa sản phẩm này không?");
        if (Option == JOptionPane.OK_OPTION) {
            int row = this.tblSP.getSelectedRow();
            if (row == -1) {
                return;
            }
            int spID = (int) this.tblSP.getValueAt(row, 0);
            spctRepo.DeleteSPCTs(spID);
            spRepo.DeleteProduct(spID);
            LoadDatatoTableSP();
            DefaultTableModel dtm = (DefaultTableModel) tblSanPhamChiTiet.getModel();
            dtm.setRowCount(0);
            JOptionPane.showMessageDialog(this, "Xóa sản phẩm thành công");
        }

    }//GEN-LAST:event_btnRemoveProductActionPerformed

    private void btnInsertPDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertPDetailActionPerformed
        int row = tblSP.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm muốn thêm chi tiết");
            return;
        }
        int spID = (int) this.tblSP.getValueAt(row, 0);

        for (SanPhamChiTiet spctcheck : spctRepo.getList()) {
            if (spctcheck.getSan_pham_Id() == spID) {
                if (this.txtMauSac.getText().equalsIgnoreCase(spctcheck.getColor()) && this.cbbKichThuoc.getSelectedItem().toString().equalsIgnoreCase(spctcheck.getSize().trim())) {
                    JOptionPane.showMessageDialog(this, "Sản phẩm " + txtTenSP.getText() + " có màu " + this.txtMauSac.getText() + " kích thước " + this.cbbKichThuoc.getSelectedItem().toString() + " đã tồn tại !");

                    return;
                }
            }

        }
        if (CheckValidateSPCT()) {

            SanPhamChiTiet spct = new SanPhamChiTiet();
            spct.setSan_pham_Id((int) this.tblSP.getValueAt(row, 0));
            spct.setColor(this.txtMauSac.getText());
            spct.setQuantity(Integer.parseInt(this.txtSoLuong.getText()));
            spct.setSellPrice(Float.parseFloat(this.txtGia.getText()));
            spct.setSize(this.cbbKichThuoc.getSelectedItem().toString());
            spct.setNote(this.txtGhiChu.getText());

            spctRepo.InsertProductDetail(spct);
            LoadDataToTableSPCT((int) this.tblSP.getValueAt(row, 0));
            JOptionPane.showMessageDialog(this, "Thêm sản phẩm chi tiết thành công");
        }


    }//GEN-LAST:event_btnInsertPDetailActionPerformed

    private void btnUpdatePDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePDetailActionPerformed
        int row = tblSP.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm muốn thêm chi tiết");
            return;
        }
        int rowtblSPCT = tblSanPhamChiTiet.getSelectedRow();
        if (rowtblSPCT == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm chi tiết muốn sửa");
            return;
        }
        if (CheckValidateSPCT()) {

            SanPhamChiTiet spct = new SanPhamChiTiet();
            spct.setId((int) tblSanPhamChiTiet.getValueAt(rowtblSPCT, 0));
            spct.setSan_pham_Id((int) this.tblSP.getValueAt(row, 0));
            spct.setColor(this.txtMauSac.getText());
            spct.setQuantity(Integer.parseInt(this.txtSoLuong.getText()));
            spct.setSellPrice(Float.parseFloat(this.txtGia.getText()));
            spct.setSize(this.cbbKichThuoc.getSelectedItem().toString());
            spct.setNote(this.txtGhiChu.getText());
            spctRepo.UpdateSPCT(spct);
            LoadDataToTableSPCT((int) this.tblSP.getValueAt(row, 0));
            JOptionPane.showMessageDialog(this, "Sửa sản phẩm chi tiết thành công");
        }
    }//GEN-LAST:event_btnUpdatePDetailActionPerformed

    private void btnRemovePDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovePDetailActionPerformed
        int rowtblSPCT = tblSanPhamChiTiet.getSelectedRow();
        int row = tblSP.getSelectedRow();
        if (rowtblSPCT == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm chi tiết muốn xóa");
            return;
        }
        var Option = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa sản phẩm chi tiết này không?");
        if (Option == JOptionPane.OK_OPTION) {

            spctRepo.DeleteSPCT(((int) tblSanPhamChiTiet.getValueAt(rowtblSPCT, 0)));
            LoadDataToTableSPCT((int) this.tblSP.getValueAt(row, 0));
            JOptionPane.showMessageDialog(this, "Sửa sản phẩm chi tiết thành công");
        }

    }//GEN-LAST:event_btnRemovePDetailActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int row = this.tblSanPhamChiTiet.getSelectedRow();
            if (row == -1) {
                return;
            }
            int rowSP = this.tblSP.getSelectedRow();
            if (rowSP == -1) {
                return;
            }

            String data = this.tblSanPhamChiTiet.getValueAt(row, 1).toString();

            BufferedImage barcodeImage = generateBarcode(data);
//            String nameSP = tblSanPhamChiTiet.getValueAt(rowSP,1 ).toString();
//            String color = this.tblSanPhamChiTiet.getValueAt(row, 2).toString();
//            String size = this.tblSanPhamChiTiet.getValueAt(row, 4).toString();
            System.out.println("CHCECKKC");
            saveBarcodeImage(barcodeImage, "D:\\trotruong.png");

        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked

    }//GEN-LAST:event_jPanel5MouseClicked

    private void txtSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusGained
        if (this.txtSearch.getText().equalsIgnoreCase("Tên sản phẩm")) {
            this.txtSearch.setForeground(Color.BLACK);
            this.txtSearch.setText("");
        }
    }//GEN-LAST:event_txtSearchFocusGained

    private void txtSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusLost
        if (this.txtSearch.getText().equals("")) {
            this.txtSearch.setText("Tên sản phẩm");
            this.txtSearch.setForeground(Color.GRAY);
        }

    }//GEN-LAST:event_txtSearchFocusLost

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped

    }//GEN-LAST:event_txtSearchKeyTyped

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        DefaultTableModel dtm = (DefaultTableModel) this.tblSP.getModel();
        dtm.setRowCount(0);
        String search = this.txtSearch.getText();
        for (SanPham sp : spRepo.getList()) {
            String regex = ".*" + Pattern.quote(search) + ".*";
            Pattern pattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);
            Matcher matcher = pattern.matcher(sp.getName());
            if (matcher.matches()) {
                Object[] rowData = {
                    sp.getId(),
                    sp.getName(),
                    sp.getDanh_muc_id(),
                    sp.getFabricType(),
                    sp.getDesigns(),};
                dtm.addRow(rowData);

            }
        }
    }//GEN-LAST:event_txtSearchKeyReleased
    private BufferedImage generateBarcode(String data) {
        try {
            // Set up the barcode writer
            MultiFormatWriter writer = new MultiFormatWriter();
            BitMatrix bitMatrix = writer.encode(data, BarcodeFormat.CODE_128, 200, 100);

            // Create a BufferedImage from the BitMatrix
            BufferedImage image = new BufferedImage(bitMatrix.getWidth(), bitMatrix.getHeight(), BufferedImage.TYPE_INT_RGB);
            for (int x = 0; x < bitMatrix.getWidth(); x++) {
                for (int y = 0; y < bitMatrix.getHeight(); y++) {
                    image.setRGB(x, y, bitMatrix.get(x, y) ? Color.BLACK.getRGB() : Color.WHITE.getRGB());
                }
            }

            return image;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }

    }

    private void saveBarcodeImage(BufferedImage image, String filePath) {
        try {
            System.out.println("HEHEHE");
            File outputFile = new File(filePath);
            ImageIO.write(image, "png", outputFile);
            System.out.println("Barcode image saved to: " + outputFile.getAbsolutePath());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private boolean CheckValidateSPCT() {
        String Color = this.txtMauSac.getText();
        String SellPrice = this.txtGia.getText();
        String Quantity = this.txtSoLuong.getText();

        if (Color.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập màu sắc của sản phẩm chi tiết");
            return false;
        }
        if (SellPrice.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập giá của sản phẩm chi tiết");
            return false;
        } else {
            try {
                float Giaban = Float.parseFloat(SellPrice);
            } catch (NumberFormatException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Vui lòng nhập giá ở dạng số");
                return false;
            }
        }
        if (Quantity.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng của sản phẩm chi tiết");
            return false;
        } else {
            try {
                int soluong = Integer.parseInt(Quantity);
            } catch (NumberFormatException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng ở dạng số");
                return false;
            }
        }
        return true;
    }

    private boolean ValidateSP() {
        String TenSP = this.txtTenSP.getText();
        String LoaiVai = this.txtLoaiVai.getText();
        String KieuDang = this.txtKieuDang.getText();
        if (TenSP.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tên sản phẩm");
            return false;
        }
        if (LoaiVai.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập loại vải của sản phẩm");
            return false;
        }
        if (KieuDang.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập kiểu dáng của sản phẩm");
            return false;
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameSanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPanel;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClearPDetail;
    private javax.swing.JButton btnInsertPDetail;
    private javax.swing.JButton btnRemovePDetail;
    private javax.swing.JButton btnRemoveProduct;
    private javax.swing.JButton btnThemSP;
    private javax.swing.JButton btnUpdatePDetail;
    private javax.swing.JButton btnUpdateProduct;
    private javax.swing.JComboBox<String> cbbDanhMuc;
    private javax.swing.JComboBox<String> cbbKichThuoc;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTable tblSP;
    private javax.swing.JTable tblSanPhamChiTiet;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtKieuDang;
    private javax.swing.JTextField txtLoaiVai;
    private javax.swing.JTextField txtMauSac;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSP;
    // End of variables declaration//GEN-END:variables
}
