/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.HoaDon;
import Model.HoaDonChiTiet;
import Model.SanPhamChiTiet;
import Model.SanPham;
import Model.KhachHang;
import Model.PhieuGiamGiaChiTiet;
import Repository.DoiGiamGiaRepository;
import Repository.GiamGiaRepository;
import Repository.HoaDonChiTietRepository;
import Repository.HoaDonRepository;
import Repository.KhachHangRepository;
import Repository.SanPhamChiTietRepository;
import Repository.SanPhamRepository;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.DecodeHintType;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.EnumMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import javax.lang.model.element.Name;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.core.Size;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.videoio.VideoCapture;


/**
 *
 * @author Administrator
 */
public class JFrameHoaDon extends javax.swing.JFrame {

    private VideoCapture capture;
    private Mat image;
    private HoaDonRepository HOA_DON_REPO;
    private SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    private KhachHangRepository khRepo = new KhachHangRepository();
    private SanPhamRepository SPR = new SanPhamRepository();
    private SanPhamChiTietRepository spct = new SanPhamChiTietRepository();
    private HoaDonChiTietRepository hdctRepo = new HoaDonChiTietRepository();
    private DoiGiamGiaRepository dggRepo = new DoiGiamGiaRepository();
    private ArrayList<HoaDonChiTiet> hdct;
    private GiamGiaRepository GiamGiaRepo = new GiamGiaRepository();

    /**
     * Creates new form NewJFrame
     */
    public JFrameHoaDon() {
        initComponents();
        HOA_DON_REPO = new HoaDonRepository();
        loadHoaDon();
        loadDataToTableSPCT();
        initOpenCV();
        startWebCam();

    }

    private void loadHoaDon() {
        DefaultTableModel dtm = (DefaultTableModel) tblHoaDon.getModel();
        dtm.setRowCount(0);
        for (HoaDon hd : HOA_DON_REPO.getList()) {
            String trangthai = "";
            switch (hd.getTrangThai()) {
                case 1:
                    trangthai = "Đã thanh toán";
                    break;
                case 3:
                    trangthai = "Hóa đơn hủy";

                    break;
                default:
                    trangthai = "Hóa đơn chờ";
                    break;
            }
            Object[] rowData = {
                hd.getMaHoaDon(),
                khRepo.getNameKhachHang(hd.getKhach_hang_id()),
                trangthai,
                sdf.format(hd.getNgayMua()),
                hd.getTong_tien(),};
            dtm.addRow(rowData);
        }

    }

    private void loadDataToTableSPCT() {
        DefaultTableModel dtm = (DefaultTableModel) tblSanPham.getModel();
        dtm.setRowCount(0);
        for (SanPhamChiTiet spct : spct.getList()) {
            Object[] rowData = {
                spct.getId(),
                SPR.getName(spct.getSan_pham_Id()),
                SPR.getFabricType(spct.getSan_pham_Id()),
                SPR.getDesigns(spct.getSan_pham_Id()),
                spct.getSize(),
                spct.getColor(),
                spct.getQuantity(),
                spct.getSellPrice(),};
            dtm.addRow(rowData);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHoaDonCT = new javax.swing.JTable();
        btnAddQty = new javax.swing.JButton();
        btnTruQty = new javax.swing.JButton();
        btnRemoveProduct = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        CamerScreen = new javax.swing.JPanel();
        webCamScreen = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtSĐT = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbTongTien = new javax.swing.JLabel();
        lbGiamGia = new javax.swing.JLabel();
        txtTienKhachDua = new javax.swing.JTextField();
        lbCanTra = new javax.swing.JLabel();
        lbTienThua = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        btnThanhToan = new javax.swing.JButton();
        btnTaoHoaDon = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMaGG = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(1300, 700));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh Sách Hoá Đơn"));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HĐ", "Tên KH", "Trạng Thái ", "Ngày Tạo", "Tổng Tiền"
            }
        ));
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(252, 252, 252))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Hoá đơn chi tiết"));

        tblHoaDonCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên Sản Phẩm", "Số Lượng", "Đơn Giá", "Thành Tiền"
            }
        ));
        tblHoaDonCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonCTMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblHoaDonCT);

        btnAddQty.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/plus (1).png"))); // NOI18N
        btnAddQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddQtyActionPerformed(evt);
            }
        });

        btnTruQty.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/minus.png"))); // NOI18N
        btnTruQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTruQtyActionPerformed(evt);
            }
        });

        btnRemoveProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/remove.png"))); // NOI18N
        btnRemoveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btnAddQty, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(btnTruQty, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(btnRemoveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddQty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTruQty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemoveProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh Sách Sản Phẩm"));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên Sản Phẩm", "Thể Loại", "Chất Liệu", "Size", "Màu Sắc", "Số Lượng", "Đơn Giá"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblSanPham);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout CamerScreenLayout = new javax.swing.GroupLayout(CamerScreen);
        CamerScreen.setLayout(CamerScreenLayout);
        CamerScreenLayout.setHorizontalGroup(
            CamerScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(webCamScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        CamerScreenLayout.setVerticalGroup(
            CamerScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(webCamScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.setVerifyInputWhenFocusTarget(false);

        jLabel2.setText("Số điện thoại khách hàng");

        txtSĐT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSĐTKeyReleased(evt);
            }
        });

        jLabel3.setText("Tổng tiền hàng:");

        jLabel4.setText("Giảm giá:");

        jLabel5.setText("Khách cần trả: ");

        jLabel6.setText("Tiền khách đưa:");

        jLabel7.setText("Tiền thừa:");

        txtTienKhachDua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTienKhachDuaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTienKhachDuaKeyReleased(evt);
            }
        });

        btnThanhToan.setBackground(new java.awt.Color(153, 255, 153));
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/payment-method.png"))); // NOI18N
        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnTaoHoaDon.setBackground(new java.awt.Color(255, 255, 204));
        btnTaoHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTaoHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/bill.png"))); // NOI18N
        btnTaoHoaDon.setText("Tạo Hoá Đơn");
        btnTaoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHoaDonActionPerformed(evt);
            }
        });

        btnHuy.setBackground(new java.awt.Color(255, 51, 51));
        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/cancel.png"))); // NOI18N
        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTaoHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTaoHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel8.setText("Mã giảm giá");

        txtMaGG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaGGKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(19, 19, 19)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbGiamGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbCanTra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(36, 36, 36))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMaGG, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lbTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbGiamGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lbCanTra, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lbTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtMaGG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSĐT, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSĐT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(378, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(CamerScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(CamerScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1260, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        int row = this.tblSanPham.getSelectedRow();
        if (row == -1) {
            return;
        }
        int spctID = (int) this.tblSanPham.getValueAt(row, 0);
        InsertProductIntoBill(spctID);

    }//GEN-LAST:event_tblSanPhamMouseClicked
    public void InsertProductIntoBill(int spctID) {
        int rowHoaDon = this.tblHoaDon.getSelectedRow();
        if (rowHoaDon == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng tạo hóa đơn trước!");
            return;
        }
        int HoaDonID = (int) this.tblHoaDon.getValueAt(rowHoaDon, 0);
        for(HoaDon hoadon : HOA_DON_REPO.getList()){
            if(hoadon.getMaHoaDon() == HoaDonID){
                if(hoadon.getTrangThai() != 2){
                    return;
                }
            }
        }
        DefaultTableModel dtm = (DefaultTableModel) tblHoaDonCT.getModel();

        int userInput = 0;
        int quantityProduct = 0;
        boolean validInput = false;
        do {
            String input = JOptionPane.showInputDialog(this, "Nhập số lượng sản phẩm");
            if (input == null) {
                return;
            }
            try {
                userInput = Integer.parseInt(input);
                validInput = true;
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập một số!");
            }
        } while (!validInput);
        BigDecimal Price = BigDecimal.ZERO;
        for (SanPhamChiTiet spct : spct.getList()) {
            if (spct.getId() == spctID) {
                quantityProduct = spct.getQuantity() - userInput;
                Price = BigDecimal.valueOf(spct.getSellPrice());
                if (quantityProduct < 0) {
                    JOptionPane.showMessageDialog(null, "Số lượng khong hợp lệ vui lòng nhập lại!");
                    return;

                }
                break;
            }
        }

        spct.MinusQuantity(spctID, quantityProduct);
        InsertProduct(HoaDonID, spctID, userInput, Price);
        UpdateTotalPrice(HoaDonID, rowHoaDon);
        tblHoaDon.setRowSelectionInterval(rowHoaDon, rowHoaDon);
        loadDataToTableSPCT();
        LoadToForm(HoaDonID);
    }

    public void InsertProduct(int HoaDonID, int spctID, int userInput, BigDecimal Price) {
        int quantityProduct = 0;
        for (HoaDonChiTiet hdct : hdctRepo.GetListBill(HoaDonID)) {
            if (hdct.getProductDetailID() == spctID) {
                quantityProduct = hdct.getQuantity() + userInput;
                hdctRepo.UpdateHDCT(quantityProduct, hdct.getHoaDonCTID());
                LoadProductToTBL(HoaDonID);
                return;

            }
        }
        hdctRepo.InsertHDCT(HoaDonID, spctID, userInput, Price);
        LoadProductToTBL(HoaDonID);

    }

    public void LoadProductToTBL(int HoaDonID) {
        hdct = hdctRepo.GetListBill(HoaDonID);
        DefaultTableModel dtm = (DefaultTableModel) this.tblHoaDonCT.getModel();
        dtm.setRowCount(0);
        for (HoaDonChiTiet hdctdetail : hdct) {
            Object[] rowData = {
                hdctdetail.getNameProduct(),
                hdctdetail.getQuantity(),
                hdctdetail.getPrice(),
                hdctdetail.getIntoMoney()
            };
            dtm.addRow(rowData);
        }
    }

    private void btnTaoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHoaDonActionPerformed
        HoaDon hoaDon = new HoaDon();

        hoaDon.setNgayMua(new Date());
        BigDecimal defaultTongTien = BigDecimal.ZERO;
        hoaDon.setTong_tien(defaultTongTien);
        hoaDon.setTrangThai(2);
        hoaDon.setSo_tien_giam_gia(defaultTongTien);
        hoaDon.setTien_khac_dua(defaultTongTien);
        hoaDon.setTien_thua(defaultTongTien);

        HOA_DON_REPO.InsertProduct(hoaDon);

        loadHoaDon();
    }//GEN-LAST:event_btnTaoHoaDonActionPerformed

    private void tblHoaDonCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonCTMouseClicked

    }//GEN-LAST:event_tblHoaDonCTMouseClicked

    private void btnTruQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTruQtyActionPerformed
        int row = this.tblHoaDon.getSelectedRow();
        if (row == -1) {
            return;
        }
        int rowHoaDonCT = this.tblHoaDonCT.getSelectedRow();
        if(rowHoaDonCT == -1){
            return;
        }
        int HoaDonID = (int) this.tblHoaDon.getValueAt(row, 0);
        int QuantityProduct = 0;
        ArrayList<HoaDonChiTiet> listHoaDonCT = hdctRepo.GetListBill(HoaDonID);
        HoaDonChiTiet hdct = listHoaDonCT.get(rowHoaDonCT);

        for (SanPhamChiTiet SanPhamCT : spct.getList()) {
            if (SanPhamCT.getId() == hdct.getProductDetailID()) {
                QuantityProduct = SanPhamCT.getQuantity() + 1;
            }
        }
        spct.MinusQuantity(hdct.getProductDetailID(), QuantityProduct);
        if (hdct.getQuantity() == 1) {
            return;
        }
        int quantityProductInBill = hdct.getQuantity() - 1;
        hdctRepo.UpdateHDCT(quantityProductInBill, hdct.getHoaDonCTID());
        LoadProductToTBL(HoaDonID);
        loadDataToTableSPCT();
        UpdateTotalPrice(HoaDonID, row);
        tblHoaDonCT.setRowSelectionInterval(rowHoaDonCT, rowHoaDonCT);
        LoadToForm(HoaDonID);

    }//GEN-LAST:event_btnTruQtyActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        int row = this.tblHoaDon.getSelectedRow();
        if (row == -1) {
            return;
        }
        int HoaDonID = (int) this.tblHoaDon.getValueAt(row, 0);
        hdct = hdctRepo.GetListBill(HoaDonID);
        DefaultTableModel dtm = (DefaultTableModel) this.tblHoaDonCT.getModel();
        dtm.setRowCount(0);
        for (HoaDonChiTiet hdctdetail : hdct) {
            Object[] rowData = {
                hdctdetail.getNameProduct(),
                hdctdetail.getQuantity(),
                hdctdetail.getPrice(),
                hdctdetail.getIntoMoney()
            };
            dtm.addRow(rowData);
        }
        LoadToForm(HoaDonID);
        


    }//GEN-LAST:event_tblHoaDonMouseClicked

    public void LoadToForm(int HoaDonID){
        for (HoaDon hd : HOA_DON_REPO.getList()) {
            if (hd.getMaHoaDon() == HoaDonID) {
                this.txtSĐT.setText(khRepo.getPNumber(hd.getKhach_hang_id()));
                this.lbTongTien.setText(formatMoney(hd.getTong_tien()));
                this.lbGiamGia.setText(formatMoney(hd.getSo_tien_giam_gia()));
                if(hd.getMa_giam_gia() == null){
                    this.txtMaGG.setText("");

                }else{
                     this.txtMaGG.setText(hd.getMa_giam_gia().trim());

                 }
                if (hd.getTong_tien() != null && hd.getSo_tien_giam_gia() != null) {

                    this.lbCanTra.setText(formatMoney(hd.getTong_tien().subtract(hd.getSo_tien_giam_gia())));

                }else{
                    this.lbCanTra.setText("0");
                }
                this.lbTienThua.setText(formatMoney(hd.getTien_thua()));
                if (hd.getTien_khac_dua() == null) {
                    this.txtTienKhachDua.setText("0");

                } else {
                    this.txtTienKhachDua.setText(hd.getTien_khac_dua().stripTrailingZeros().toPlainString());

                }
                if (hd.getTrangThai() == 1 || hd.getTrangThai() == 3) {
                    this.btnAddQty.setEnabled(false);
                    this.btnRemoveProduct.setEnabled(false);
                    this.btnTruQty.setEnabled(false);
                    txtTienKhachDua.setEditable(false);
                    this.btnThanhToan.setEnabled(false);
                    this.btnHuy.setEnabled(false);
                    this.txtMaGG.setEditable(false);
                    this.txtSĐT.setEditable(false);
                    


                } else {
                    txtTienKhachDua.setEditable(true);
                    this.btnAddQty.setEnabled(true);
                    this.btnRemoveProduct.setEnabled(true);
                    this.btnTruQty.setEnabled(true);
                    this.btnThanhToan.setEnabled(true);
                    this.btnHuy.setEnabled(true);
                    this.txtSĐT.setEditable(true);
                    if(dggRepo.GetPercentDiscount() > 0){
                        this.txtMaGG.setEditable(false);

                    }else{
                        this.txtMaGG.setEditable(true);

                    }



                }
                if (hd.getTong_tien() != null && hd.getSo_tien_giam_gia() != null) {
                    BigDecimal cantra = BigDecimal.ZERO;
                    cantra = cantra.add(hd.getTong_tien().subtract(hd.getSo_tien_giam_gia()));
                    this.lbCanTra.setText(formatMoney(cantra));
                }
             
               
                
                
                break;
            }

        }
    }
    private void btnAddQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddQtyActionPerformed
        int row = this.tblHoaDon.getSelectedRow();
        if (row == -1) {
            return;
        }
        int rowHoaDonCT = this.tblHoaDonCT.getSelectedRow();
        if(rowHoaDonCT == -1){
            return ;
        }
        int HoaDonID = (int) this.tblHoaDon.getValueAt(row, 0);
        int QuantityUpdate = 0;
        ArrayList<HoaDonChiTiet> listHoaDonCT = hdctRepo.GetListBill(HoaDonID);
        HoaDonChiTiet hdct = listHoaDonCT.get(rowHoaDonCT);

        for (SanPhamChiTiet SanPhamCT : spct.getList()) {
            if (SanPhamCT.getId() == hdct.getProductDetailID()) {
                if (SanPhamCT.getQuantity() == 0) {
                    return;
                }
                QuantityUpdate = SanPhamCT.getQuantity() - 1;

            }
        }
        spct.MinusQuantity(hdct.getProductDetailID(), QuantityUpdate);

        int quantityUpdate = hdct.getQuantity() + 1;
        hdctRepo.UpdateHDCT(quantityUpdate, hdct.getHoaDonCTID());
        LoadProductToTBL(HoaDonID);
        loadDataToTableSPCT();
        UpdateTotalPrice(HoaDonID, row);
        tblHoaDonCT.setRowSelectionInterval(rowHoaDonCT, rowHoaDonCT);


    }//GEN-LAST:event_btnAddQtyActionPerformed
    public void UpdateTotalPrice(int HoaDonID, int row) {
        ArrayList<HoaDonChiTiet> listHoaDonCT = hdctRepo.GetListBill(HoaDonID);

        BigDecimal TotalPrice = BigDecimal.ZERO;
        for (HoaDonChiTiet test : listHoaDonCT) {
            TotalPrice = TotalPrice.add(test.getIntoMoney());
        }
        HoaDon hoadon = null;
        for (HoaDon hd : HOA_DON_REPO.getList()) {
            if (hd.getMaHoaDon() == HoaDonID) {
                hoadon = hd;
            }
        }
        int PercenDiscount = dggRepo.GetPercentDiscount();
        if(PercenDiscount == 0){
            PhieuGiamGiaChiTiet pggct = HandlerMaGG();
                PercenDiscount = pggct.getMuc_giam_gia();            
                hoadon.setMa_giam_gia(pggct.getMaphieu());
            System.out.println("Mã giảm giá " + hoadon.getMa_giam_gia());
            System.out.println("Mã Giảm giá ở input " + pggct.getMaphieu());

        }
        hoadon.setSo_tien_giam_gia(TotalPrice.multiply(BigDecimal.valueOf(PercenDiscount).divide(BigDecimal.valueOf(100))));
        
        hoadon.setTong_tien(TotalPrice);
        HOA_DON_REPO.UpdateTotalPrice(hoadon);
        loadHoaDon();
        LoadToForm(HoaDonID);

        tblHoaDon.setRowSelectionInterval(row, row);

    }
    private void btnRemoveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProductActionPerformed
        int Option = JOptionPane.showConfirmDialog(this, "Xác nhận xóa sản phẩm khỏi hóa đơn!");
        if (Option == JOptionPane.OK_OPTION) {
            int row = this.tblHoaDon.getSelectedRow();
            if (row == -1) {
                return;
            }
            int rowHoaDonCT = this.tblHoaDonCT.getSelectedRow();
            if (rowHoaDonCT == -1) {
                return;
            }
            int HoaDonID = (int) this.tblHoaDon.getValueAt(row, 0);
            int QuantityUpdate = 0;
            ArrayList<HoaDonChiTiet> listHoaDonCT = hdctRepo.GetListBill(HoaDonID);
            for (HoaDonChiTiet hdct : listHoaDonCT) {
                System.out.println(hdct.getNameProduct());
            }
            System.out.println(rowHoaDonCT);

            HoaDonChiTiet hdct = listHoaDonCT.get(rowHoaDonCT);

            for (SanPhamChiTiet spct : spct.getList()) {
                if (spct.getId() == hdct.getProductDetailID()) {
                    QuantityUpdate = spct.getQuantity() + hdct.getQuantity();
                }
            }
            spct.MinusQuantity(hdct.getProductDetailID(), QuantityUpdate);
            hdctRepo.RemoveHDCT(hdct.getHoaDonCTID());

            LoadProductToTBL(HoaDonID);
            loadDataToTableSPCT();
            UpdateTotalPrice(HoaDonID, row);
            LoadToForm(HoaDonID);

        }


    }//GEN-LAST:event_btnRemoveProductActionPerformed

    private void txtTienKhachDuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienKhachDuaKeyPressed

    }//GEN-LAST:event_txtTienKhachDuaKeyPressed

    private void txtTienKhachDuaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienKhachDuaKeyReleased
        try {
            int row = this.tblHoaDon.getSelectedRow();
            int HoaDonID = (int) this.tblHoaDon.getValueAt(row, 0);
            String Txtkhachdua = this.txtTienKhachDua.getText();
            if (Txtkhachdua.isEmpty()) {
                return;
            }
            BigDecimal tienkhachdua = new BigDecimal(Txtkhachdua);
            BigDecimal tienthua = BigDecimal.ZERO;

            HoaDon hoadon = null;
            for (HoaDon hd : HOA_DON_REPO.getList()) {
                if (hd.getMaHoaDon() == HoaDonID) {
                    hoadon = hd;

                }

            }
            hoadon.setTien_khac_dua(tienkhachdua);
            tienthua = tienkhachdua.subtract(hoadon.getTong_tien().subtract(hoadon.getSo_tien_giam_gia()));
            if (tienthua.compareTo(BigDecimal.ZERO) == 1) {
                hoadon.setTien_thua(tienthua);
                lbTienThua.setText(formatMoney(hoadon.getTien_thua()));

            }else{
                hoadon.setTien_thua(BigDecimal.ZERO);
                lbTienThua.setText("0");
            }
            HOA_DON_REPO.UpdateTotalPrice(hoadon);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số tiền khách đưa đúng định dạng!");
        }

    }//GEN-LAST:event_txtTienKhachDuaKeyReleased

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        int row = this.tblHoaDon.getSelectedRow();
        if(row == -1){
            return ;
        }
        int HoaDonID = (int) this.tblHoaDon.getValueAt(row, 0);
        HoaDon hoadon = null;
        for(HoaDon hd : HOA_DON_REPO.getList()){
            if(hd.getMaHoaDon() == HoaDonID){
                hoadon = hd;
            }
        }
        BigDecimal tienphaitra = hoadon.getTong_tien().subtract(hoadon.getSo_tien_giam_gia());
        System.out.println(hoadon.getTien_khac_dua());
        if(hoadon.getTien_khac_dua() == null || tienphaitra.compareTo(hoadon.getTien_khac_dua()) == 1){
            JOptionPane.showMessageDialog(this, "Không đủ tiền thanh toán, vui lòng thử lại");
            return ;
        }
        
        int KhachHangID = 0;
        String sdtKH = this.txtSĐT.getText();
        if(!sdtKH.isEmpty()){
            if(khRepo.getKhachHangID(sdtKH) != -1){
                KhachHangID = khRepo.getKhachHangID(sdtKH);
            };
        }        
        hoadon.setKhach_hang_id(KhachHangID);
        hoadon.setTrangThai(1);
        HOA_DON_REPO.UpdateStatus(hoadon);
        JOptionPane.showMessageDialog(this, "Thanh toán thành công!");
        loadHoaDon();
        
        
        
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        
        int row = this.tblHoaDon.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn muốn thanh toán!");
            return;
        }
        int Option = JOptionPane.showConfirmDialog(this, "Bạn có muốn hủy hóa đơn này không ?");
        if(Option == JOptionPane.OK_OPTION){
            int HoaDonID = (int) this.tblHoaDon.getValueAt(row, 0);
            HoaDon hoadon = null;
            for (HoaDon hd : HOA_DON_REPO.getList()) {
                if (hd.getMaHoaDon() == HoaDonID) {
                    hoadon = hd;
                }
            }
            hoadon.setTrangThai(3);
            HOA_DON_REPO.UpdateStatus(hoadon);
            JOptionPane.showMessageDialog(this, "Đã hủy hóa đơn!");
            loadHoaDon();
            String[] data = {"Dòng 1", "Dòng 2", "Dòng 3"};
        
        }
     
    }//GEN-LAST:event_btnHuyActionPerformed
   
    private void txtMaGGKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaGGKeyReleased
        int row = this.tblHoaDon.getSelectedRow();
        if (row == -1) {
            return;
        }
        int HoaDonID = (int) this.tblHoaDon.getValueAt(row, 0);
        String sdtKH = this.txtSĐT.getText();
       
        char character = evt.getKeyChar();
        if (Character.isLetterOrDigit(character)) {
            if (sdtKH.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập số điện thoại khách hàng trước!");
            }else{
                UpdateTotalPrice(HoaDonID, row);

            }

        } else {
            evt.consume(); // Loại bỏ ký tự không hợp lệ
        }
        
    }//GEN-LAST:event_txtMaGGKeyReleased

    private void txtSĐTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSĐTKeyReleased
        int row = this.tblHoaDon.getSelectedRow();
        if (row == -1) {
            return;
        }
        
        int HoaDonID = (int) this.tblHoaDon.getValueAt(row, 0);
        HoaDon hoadon = null;
        for (HoaDon hd : HOA_DON_REPO.getList()) {
            if (hd.getMaHoaDon() == HoaDonID) {
                hoadon = hd;
            }
        }
        int KhachHangID = 0;
        String sdtKH = this.txtSĐT.getText();
        if (!sdtKH.isEmpty()) {
            if (khRepo.getKhachHangID(sdtKH) != -1) {
                KhachHangID = khRepo.getKhachHangID(sdtKH);
            }
        }
        hoadon.setKhach_hang_id(KhachHangID);
        hoadon.setTrangThai(2);
        HOA_DON_REPO.UpdateStatus(hoadon);
    }//GEN-LAST:event_txtSĐTKeyReleased
    public PhieuGiamGiaChiTiet HandlerMaGG(){
        System.out.println("Hello");
        String MaGG = this.txtMaGG.getText();
       
        int KhachHangID = 0;
        String sdtKH = this.txtSĐT.getText();
        if (!sdtKH.isEmpty()) {
            if (khRepo.getKhachHangID(sdtKH) != -1) {
                KhachHangID = khRepo.getKhachHangID(sdtKH);
            };
        }
        int row = this.tblHoaDon.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn trước");
            return null;
        }
        int HoaDonID = (int) this.tblHoaDon.getValueAt(row, 0);
        HoaDon hoadon = null;
        PhieuGiamGiaChiTiet PhieuGGCT = GiamGiaRepo.GetPercentDiscount(MaGG, KhachHangID);
        if (PhieuGGCT == null) {
            PhieuGGCT = new PhieuGiamGiaChiTiet();
            PhieuGGCT.setMuc_giam_gia(0);
            PhieuGGCT.setMaphieu(MaGG);
            return PhieuGGCT;
        }

        for (HoaDon hd : HOA_DON_REPO.getList()) {
            if (hd.getMaHoaDon() == HoaDonID) {
                hoadon = hd;
            }
        }
        if (hoadon.getTong_tien().compareTo(PhieuGGCT.getDieu_kien()) == -1) {
            JOptionPane.showMessageDialog(this, "Tổng tiền phải từ " + formatMoney(PhieuGGCT.getDieu_kien()) + " để có thể sử dụng mã giảm giá này!", "Không đủ điều kiện sử dụng", NORMAL);
            return null;
        }
        if (PhieuGGCT.isTrang_thai() == false) {
            JOptionPane.showMessageDialog(this, "Mã giảm giá " + MaGG + " đã được sử dụng!");
            return null;
        }
        
        return PhieuGGCT;
        
        
    }
    public String formatMoney(BigDecimal money) {
        if (money == null) {
            return "0";
        }
        DecimalFormat decimalFormat = new DecimalFormat("#,###");
        return decimalFormat.format(money);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameHoaDon().setVisible(true);
            }
        });
    }

    private void initOpenCV() {
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        System.out.println("OpenCV loaded successfully");
        capture = new VideoCapture(0);
        image = new Mat();
    }

    public void startWebCam() {
        Runnable webcamTask = () -> {
            ImageIcon icon;
            while (true) {
                capture.read(image);
                BufferedImage bufferedImage = convertMatToBufferedImage(image);

                // Đọc barcode từ ảnh sử dụng ZXing
                String barcodeData = readBarcode(bufferedImage);
                if (barcodeData != null) {
                    System.out.println("Barcode: " + barcodeData);
                    for (SanPhamChiTiet sp : this.spct.getList()) {
                        if (sp.getBarcode().equalsIgnoreCase(barcodeData)) {
                            InsertProductIntoBill(sp.getId());
//                            JOptionPane.showMessageDialog(this, barcodeData);
                            break;

                        }
                    }

                }
                Size newSize = new Size(349, 217);
                Imgproc.resize(image, image, newSize);
                MatOfByte buf = new MatOfByte();
                Imgcodecs.imencode(".jpg", image, buf);
                byte[] imageData = buf.toArray();

                icon = new ImageIcon(imageData);
                webCamScreen.setIcon(icon);

            }
        };

        Thread webcamThread = new Thread(webcamTask);
        webcamThread.setDaemon(true);
        webcamThread.start();

    }

    private BufferedImage convertMatToBufferedImage(Mat mat) {
        int type = BufferedImage.TYPE_BYTE_GRAY;
        if (mat.channels() > 1) {
            type = BufferedImage.TYPE_3BYTE_BGR;
        }
        BufferedImage image = new BufferedImage(mat.width(), mat.height(), type);
        mat.get(0, 0, ((DataBufferByte) image.getRaster().getDataBuffer()).getData());
        return image;
    }

// Phương thức đọc barcode từ ảnh sử dụng ZXing
    private String readBarcode(BufferedImage image) {
        Map<DecodeHintType, Object> hints = new EnumMap<>(DecodeHintType.class);
        hints.put(DecodeHintType.TRY_HARDER, Boolean.TRUE);

        MultiFormatReader reader = new MultiFormatReader();
        BinaryBitmap binaryBitmap = new BinaryBitmap(new HybridBinarizer(new BufferedImageLuminanceSource(image)));
        Result result;
        try {
            result = reader.decode(binaryBitmap, hints);
            return result.getText();
        } catch (NotFoundException | ArrayIndexOutOfBoundsException e) {
//            System.out.println("Barcode not found");
        }
        return null;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CamerScreen;
    private javax.swing.JButton btnAddQty;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnRemoveProduct;
    private javax.swing.JButton btnTaoHoaDon;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnTruQty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbCanTra;
    private javax.swing.JLabel lbGiamGia;
    private javax.swing.JLabel lbTienThua;
    private javax.swing.JLabel lbTongTien;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblHoaDonCT;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtMaGG;
    private javax.swing.JTextField txtSĐT;
    private javax.swing.JTextField txtTienKhachDua;
    private javax.swing.JLabel webCamScreen;
    // End of variables declaration//GEN-END:variables

}
